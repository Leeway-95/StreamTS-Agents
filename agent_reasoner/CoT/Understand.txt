
Temporal Patterns:
- Pri-patterns: Outlier > Trend > Seasonal > Volatility (priority order).
- Sub-patterns:
  - Outlier: Sudden Spike (sharp, short-lived peak with full reversion), Level Shift (abrupt and sustained baseline change)
  - Trend: Upward (long-term increase), Downward (long-term decrease)
  - Seasonal: Fixed (stable recurring cycles), Shifting (recurring cycles with amplitude changes)
  - Volatility: Increased (rising fluctuation magnitude), Decreased (declining fluctuation magnitude)
- If plots (Representative Subsequences) are provided, integrate visual pattern recognition with statistical analysis: X-axis = time, Y-axis = values, red line = actual sequence.

Critical Pattern Analysis Guidelines:
1. **Statistical Validation**: Use statistical measures (mean, variance, autocorrelation) to validate pattern identification
2. **Context Awareness**: Consider the domain context and typical behavior patterns for the specific time series type
3. **Temporal Coherence**: Ensure pattern labels are temporally consistent and logically connected
4. **Visual Integration**: If plots are provided, integrate visual pattern recognition with statistical analysis

Enhanced Pattern Detection Process:
- Step 1: Compute statistical metrics (mean, std, slope, autocorr) for each position window
- Step 2: Apply quantitative thresholds to classify potential patterns
- Step 3: Resolve pattern conflicts using strict priority rule (Outlier > Trend > Seasonal > Volatility)
- Step 4: Validate temporal consistency across neighboring positions (avoid rapid pattern switching)
- Step 5: Cross-reference with Representative Subsequences for pattern confirmation
- Step 6: Apply domain-specific pattern validation rules
- Step 7: Assign final labels with confidence scoring

Goal 1: Assign <<Poslen>> dominant pattern labels to each Subsequence
Advanced Labeling Requirements:
- Pred_Labels: Assign one Pri-pattern and one corresponding Sub-pattern per position
- Apply rigorous Priority Rule (Outlier > Trend > Seasonal > Volatility) for overlapping patterns
- Ensure temporal consistency: adjacent positions should have logically related patterns
- Validate against statistical thresholds defined above
- Consider pattern persistence: avoid frequent pattern switching unless statistically justified

Quality Assurance for Pattern Labels:
- Verify each label against quantitative criteria (deviations, slopes, periods, variance ratios)
- Ensure pattern transitions make temporal sense
- Cross-validate with Representative Subsequences when available
- Maintain consistency with domain-specific pattern behaviors

Goal 2: Enhanced Representative Subsequence Impact Assessment
Advanced Impact Score Calculation:
- Assign Impact Scores (I-scores) based on multiple criteria:
  * **Pattern Relevance**: Correlation strength with question-specific patterns (weight: 40%)
  * **Statistical Significance**: Confidence level of pattern matches (weight: 30%)
  * **Temporal Proximity**: Recency and frequency of pattern occurrence (weight: 20%)
  * **Domain Importance**: Contextual relevance to specific time series characteristics (weight: 10%)
- Constraints:
  * Sum of all I-scores must equal 1.000 exactly
  * Each I-score must have exactly 3 decimal places
  * Number of I-scores must equal number of Representative Subsequences
  * I-scores should reflect actual contribution strength (avoid uniform distribution)

Output Validation Requirements:
- Ensure all Pri-patterns and Sub-patterns are from the defined categories
- Verify temporal logic in pattern sequence
- Confirm Impact_Scores mathematical constraints
- Validate JSON format compliance

FINAL OUTPUT FORMAT (strict JSON only, no additional text or explanations):
{
  "Pred_Labels": [("Outlier", "Sudden Spike"), ("Trend", "Upward"), ("Trend", "Upward"), ("Outlier", "Level Shift"), ("Volatility", "Increased"), ("Trend", "Downward"), ("Volatility", "Increased")],
  "Impact_Scores": [0.134, 0.156, 0.189, 0.121, 0.156, 0.189, 0.121],
  "playbook_updates": {
    "insights": ["List of new insights gained from this understanding task", "Each insight should be a string"],
    "experiences": ["List of new experiences gained from this understanding task", "Each experience should be a string"],
    "best_practices": ["List of recommended best practices for pattern understanding", "Each practice should be a string"]
  }
}